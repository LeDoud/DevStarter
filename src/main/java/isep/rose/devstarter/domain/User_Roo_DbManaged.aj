// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package isep.rose.devstarter.domain;

import isep.rose.devstarter.domain.CommentUserProject;
import isep.rose.devstarter.domain.DonationUserProject;
import isep.rose.devstarter.domain.Enumeration;
import isep.rose.devstarter.domain.FollowUserProject;
import isep.rose.devstarter.domain.Forum;
import isep.rose.devstarter.domain.ManageUserProject;
import isep.rose.devstarter.domain.Notification;
import isep.rose.devstarter.domain.User;
import java.util.Calendar;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.springframework.format.annotation.DateTimeFormat;

privileged aspect User_Roo_DbManaged {
    
    @OneToMany(mappedBy = "userId")
    private Set<CommentUserProject> User.commentUserProjects;
    
    @OneToMany(mappedBy = "userId")
    private Set<DonationUserProject> User.donationUserProjects;
    
    @OneToMany(mappedBy = "userId")
    private Set<FollowUserProject> User.followUserProjects;
    
    @OneToMany(mappedBy = "userId")
    private Set<Forum> User.forums;
    
    @OneToMany(mappedBy = "userId")
    private Set<ManageUserProject> User.manageUserProjects;
    
    @OneToMany(mappedBy = "userId")
    private Set<Notification> User.notifications;
    
    @ManyToOne
    @JoinColumn(name = "COMPTE_ENUM_ID", referencedColumnName = "ID_ENUMERATION", nullable = false)
    private Enumeration User.compteEnumId;
    
    @ManyToOne
    @JoinColumn(name = "JOB_ENUM_ID", referencedColumnName = "ID_ENUMERATION")
    private Enumeration User.jobEnumId;
    
    @Column(name = "NAME", columnDefinition = "VARCHAR", length = 255)
    private String User.name;
    
    @Column(name = "FIRSTNAME", columnDefinition = "VARCHAR", length = 255)
    private String User.firstname;
    
    @Column(name = "EMAIL", columnDefinition = "VARCHAR", length = 255)
    private String User.email;
    
    @Column(name = "PASSWORD", columnDefinition = "VARCHAR", length = 100)
    private String User.password;
    
    @Column(name = "PROFIL", columnDefinition = "TEXT")
    private String User.profil;
    
    @Column(name = "WALLET", columnDefinition = "INT")
    private Integer User.wallet;
    
    @Column(name = "ACTIVE", columnDefinition = "INT")
    private Integer User.active;
    
    @Column(name = "CREATED_DATE", columnDefinition = "DATETIME")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar User.createdDate;
    
    @Column(name = "NOTIFICATION", columnDefinition = "INT")
    private Integer User.notification;
    
    public Set<CommentUserProject> User.getCommentUserProjects() {
        return commentUserProjects;
    }
    
    public void User.setCommentUserProjects(Set<CommentUserProject> commentUserProjects) {
        this.commentUserProjects = commentUserProjects;
    }
    
    public Set<DonationUserProject> User.getDonationUserProjects() {
        return donationUserProjects;
    }
    
    public void User.setDonationUserProjects(Set<DonationUserProject> donationUserProjects) {
        this.donationUserProjects = donationUserProjects;
    }
    
    public Set<FollowUserProject> User.getFollowUserProjects() {
        return followUserProjects;
    }
    
    public void User.setFollowUserProjects(Set<FollowUserProject> followUserProjects) {
        this.followUserProjects = followUserProjects;
    }
    
    public Set<Forum> User.getForums() {
        return forums;
    }
    
    public void User.setForums(Set<Forum> forums) {
        this.forums = forums;
    }
    
    public Set<ManageUserProject> User.getManageUserProjects() {
        return manageUserProjects;
    }
    
    public void User.setManageUserProjects(Set<ManageUserProject> manageUserProjects) {
        this.manageUserProjects = manageUserProjects;
    }
    
    public Set<Notification> User.getNotifications() {
        return notifications;
    }
    
    public void User.setNotifications(Set<Notification> notifications) {
        this.notifications = notifications;
    }
    
    public Enumeration User.getCompteEnumId() {
        return compteEnumId;
    }
    
    public void User.setCompteEnumId(Enumeration compteEnumId) {
        this.compteEnumId = compteEnumId;
    }
    
    public Enumeration User.getJobEnumId() {
        return jobEnumId;
    }
    
    public void User.setJobEnumId(Enumeration jobEnumId) {
        this.jobEnumId = jobEnumId;
    }
    
    public String User.getName() {
        return name;
    }
    
    public void User.setName(String name) {
        this.name = name;
    }
    
    public String User.getFirstname() {
        return firstname;
    }
    
    public void User.setFirstname(String firstname) {
        this.firstname = firstname;
    }
    
    public String User.getEmail() {
        return email;
    }
    
    public void User.setEmail(String email) {
        this.email = email;
    }
    
    public String User.getPassword() {
        return password;
    }
    
    public void User.setPassword(String password) {
        this.password = password;
    }
    
    public String User.getProfil() {
        return profil;
    }
    
    public void User.setProfil(String profil) {
        this.profil = profil;
    }
    
    public Integer User.getWallet() {
        return wallet;
    }
    
    public void User.setWallet(Integer wallet) {
        this.wallet = wallet;
    }
    
    public Integer User.getActive() {
        return active;
    }
    
    public void User.setActive(Integer active) {
        this.active = active;
    }
    
    public Calendar User.getCreatedDate() {
        return createdDate;
    }
    
    public void User.setCreatedDate(Calendar createdDate) {
        this.createdDate = createdDate;
    }
    
    public Integer User.getNotification() {
        return notification;
    }
    
    public void User.setNotification(Integer notification) {
        this.notification = notification;
    }
    
}
